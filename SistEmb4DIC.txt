
"Ejemplo led con resistencia" 3.3 gpio14 220 ohms pág.128

cd /sys/class/gpio
echo 14 > /sys/class/gpio/export
ls ---debe aparecer gpio14
cd gpio14
ls
echo "out" > direction
ls
echo 1 > value --encender
echo 0 > value --apagar

***************************************************************************
"Usando un switch" pág.225 gpio27

cd /sys/class/gpio
echo 27 > export
cd gpio27
ls
active_low device direction edge subsystem uevent value
echo in > direction
cat direction
in
cat value
0
cat value
1
cat value
1

*****************************************************************************
sudo apt-get update
sudo apt-get install rpi.gpio
mkdir inoutput
cd inoutput/
sudo aptitude install virtualenv
virtualenv env
source env/bin/activate
--debe aparecer (env) ....
pip search gpio
pip install gpio
pip install RPi.GPIO
python
>>>> import RPi.GPIO as gpio
gpio.setmode(gio.BCM)
gpio.setup(14,gpio.OUT)
gpio.output(14,gpio.HIGH) ----encender el led
gpio.output(14,gpio.LOW) ----apagar pág. 232 
exit()
*******************************************************************************

/inoutput $ vim requirements.txt

RPi.GPIO
flask
---salir de vim
pip install -r requirements.txt

vim web.py

---web.py:
from flask import * --Flask
import RPi.GPIO as gpio

app = Flask(__name__)

gpio.setmode(gpio.BCM)
gpio.setup(14,gpio.OUT)
gpio.setup(27,gpio.IN)

@app.route("/")
def hello():
    return render_templated('template.html')--"Hello World!"

@app.route("/turn_on")
def turn_on():
    gpio.output(14,gpio.HIGH)
    return "encendidio!!"

@app.route("/turn_off")
def turn_off():
    gpio.output(14,gpio.LOW)
    return "apagado!!"

@app.route("/read")
def read():
    if gpio.input(27):
       return "presionado!!"
    else
       return "no presionado!!"

if __name__== '__main__' :
	app.run()
----salir de vim

python web.py
--aparce una direccion de internet y debemos entrar a ella y ajustar las rutas
--debe estar "Hello World!"

vim template.html
<html>
	<head>k
	</head>
	<body>
		<h1>Hola mundo</>
		este es un condigo <strong>HTML</strong>
	</body>
</html>

TAREA:
Repasar FLASK
Revisar libro
INTERFAZ WEB (QT) Y CONTROL CON GPIO's

**************************************************************
INTERFAZ GRÁFICA CON QT 11/12/17

sudo aptitude search pyqt
sudo aptitude install python3-pyqt4 python3-pyqt5
python3
>>>import PyQt4
Ir a internet y copiar código: https://www.tutorialspoint.com/pyqt/pyqt_hello_world

import sys
from PyQt4 import QtGui

def window():
   app = QtGui.QApplication(sys.argv)
   w = QtGui.QWidget()
   b = QtGui.QLabel(w)
   b.setText("Hello World!")
   w.setGeometry(100,100,200,50) --dimensiones de la pantalla
   b.move(50,20) ---mover dentro de la pantalla
   w.setWindowTitle(“PyQt”) ---etiqueta del nombre de la pantalla
   w.show()
   sys.exit(app.exec_())
	
if __name__ == '__main__':
   window()

--regresar a bash y ejecutar con "python3 testpyqt.py"

Ir a https://www.tutorialspoint.com/pyqt/pyqt_signals_and_slots.htm

import sys
from PyQt4.QtCore import *
from PyQt4.QtGui import *

def window():
   app = QApplication(sys.argv)
   win = QDialog()
   b1 = QPushButton(win)
   b1.setText("Button1")
   b1.move(50,20)
   b1.clicked.connect(b1_clicked)

   b2 = QPushButton(win)
   b2.setText("Button2")
   b2.move(50,50)
   QObject.connect(b2,SIGNAL("clicked()"),b2_clicked)

   win.setGeometry(100,100,200,100)
   win.setWindowTitle("PyQt")
   win.show()
   sys.exit(app.exec_())

def b1_clicked():
   print "Button 1 clicked"

def b2_clicked():
   print "Button 2 clicked"

if __name__ == '__main__':
   window()

--ejecutar el código de arriba 


Ir a https://www.tutorialspoint.com/pyqt/pyqt_basic_widgets.htm

aptitude seacr qtcreator
sudo aptitude instal qtcreator ---tarda mucho!!
abrir
-> application
Aqui se ve lo de qt creator: https://www.tutorialspoint.com/pyqt/pyqt_using_qt_designer.htm

sudo aptitude install qt4-qmake qt5-qmake
sudo aptitude seacrch qt | grep tools

